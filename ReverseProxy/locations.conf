    error_page 490
    = @kheopsAuthorization;
    error_page 491 = @kheopsDICOMwebProxy;
    error_page 492 = @kheopsZipper;

    location /api {
      return 490; #kheopsAuthorization
    }

    # If we hit /studies exactly, we are dealing with a study level QIDO or STOW
    location = /api/studies {

      set $geo_check EMPTY;

      if ($request_method = POST) {
        set $geo_check PASS;
      }

      if ($geo) {
        set $geo_check "${geo_check}DISABLED";
      }

      if ($geo_check = PASSDISABLED) {
        return 401;
      }

      if ( $request_method = GET ) { return 490; } #kheopsAuthorization
      if ( $request_method = OPTIONS ) { return 490; } #kheopsAuthorization

      if ( $request_method = POST ) {
        return 491; #kheopsDICOMwebProxy
      }
    }

    # Anything with users is for the authorization server
    location  ~ ^/api/studies/([0-9.]+)/series/([0-9.]+)/users {
      return 490; #kheopsAuthorization
    }

    # Anything with albums is for the authorization server
    location  ~ ^/api/studies/([0-9.]+)/series/([0-9.]+)/albums {
      return 490; #kheopsAuthorization
    }

    # Instances goes to the DICOMWebProxy
    location  ~ ^/api/studies/([0-9.]+)/series/([0-9.]+)/instances$ {
      return 491; #kheopsDICOMwebProxy
    }

    # Instances goes to the DICOMWebProxy
    location  ~ ^/api/studies/([0-9.]+)/series/([0-9.]+)/instances/([0-9.]+)$ {
      return 491; #kheopsDICOMwebProxy
    }

    # Frames goes to the DICOMWebProxy
    location  ~ ^/api/studies/([0-9.]+)/series/([0-9.]+)/instances/([0-9.]+)/frames/([0-9]+)$ {
      return 491; #kheopsDICOMwebProxy
    }

    # Metadata goes to the DICOMWebProxy
    location  ~ ^/api/studies/([0-9.]+)/series/([0-9.]+)/metadata$ {
      return 491; #kheopsDICOMwebProxy
    }

    # Bulkdata goes to the DICOMWebProxy
    location  ~ ^/api/studies/([0-9.]+)/series/([0-9.]+)/bulkdata/([a-fA-F0-9]+)$ {
      return 491; #kheopsDICOMwebProxy
    }

    # Metadata goes to the DICOMWebProxy
    location  ~ ^/api/studies/([0-9.]+)/series/([0-9.]+)/instances/([0-9.]+)/metadata$ {
      return 491; #kheopsDICOMwebProxy
    }

    # Dulkdata goes to the DICOMWebProxy
    location  ~ ^/api/studies/([0-9.]+)/series/([0-9.]+)/instances/([0-9.]+)/bulkdata/([a-fA-F0-9]+)$ {
      return 491; #kheopsDICOMwebProxy
    }
    
    # Thumbnail (series) goes to the DICOMWebProxy
    location  ~ ^/api/studies/([0-9.]+)/series/([0-9.]+)/thumbnail$ {
      return 491; #kheopsDICOMwebProxy
    }
    
    # Thumbnail (instance) goes to the DICOMWebProxy
    location  ~ ^/api/studies/([0-9.]+)/series/([0-9.]+)/instances/([0-9.]+)/thumbnail$ {
      return 491; #kheopsDICOMwebProxy
    }

    # WADO and QIDO is for the dicomwebproxy, PUT and DELETE on the series is for the authorization server
    location  ~ ^/api/studies/([0-9.]+)/series/([0-9.]+) {
      if ( $request_method = GET ) { return 491; } #kheopsDICOMwebProxy
      if ( $request_method != GET ) { return 490; } #kheopsAuthorization
    }

    # series level QIDO is for the authorization server
    location  ~ ^/api/studies/([0-9.]+)/series$ {
      return 490; #kheopsAuthorization
    }

    # study level metadata requests are handled by the authorization server
    location  ~ ^/api/studies/([0-9.]+)/metadata$ {
      return 490; #kheopsAuthorization
    }

    # study level OHIF metadata requests are handled by the DICOMweb proxy
    location  ~ ^/api/studies/([0-9.]+)/ohifmetadata$ {
      return 491; #kheopsDICOMwebProxy
    }

    # series level instance QIDO requests are handled by the DICOMweb proxy
    location  ~ ^/api/studies/([0-9.]+)/instances$ {
      return 491; #kheopsDICOMwebProxy
    }

    # Anything with users is for the authorization server
    location  ~ ^/api/studies/([0-9.]+)/users {
      return 490; #kheopsAuthorization
    }

    # Anything with albums is for the authorization server
    location  ~ ^/api/studies/([0-9.]+)/albums {
      return 490; #kheopsAuthorization
    }

    # Anything with comments is for the authorization server
    location  ~ ^/api/studies/([0-9.]+)/comments {
      return 490; #kheopsAuthorization
    }

    # Anything with favorites is for the authorization server
    location  ~ ^/api/studies/([0-9.]+)/favorites {
      return 490; #kheopsAuthorization
    }

    # Anything with favorites is for the authorization server
    location  ~ ^/api/studies/([0-9.]+)/series/([0-9.]+)/favorites {
      return 490; #kheopsAuthorization
    }

    # STOW and WADO are for the kheopsDICOMwebProxy, ZIP is for the kheopsZipper, deleting a study or appropriate is for kheopsAuthorization
    location ~ ^/api/studies/[0-9.]+$ {
      if ( $request_method = PUT ) { return 490; } #kheopsAuthorization
      if ( $request_method = DELETE ) { return 490; } #kheopsAuthorization
      if ( $request_method = OPTIONS ) { return 490; } #kheopsAuthorization

      if ($http_accept ~ "application/zip") { return 492; } #kheopsZipper
      if ($arg_accept ~ "application/zip") { return 492; } #kheopsZipper
      if ($arg_accept ~ "application%2Fzip") { return 492; } #kheopsZipper

      return 491; #kheopsDICOMwebProxy
    }

    location  /api/wado {
      proxy_set_header Connection "";

      if ( $arg_requestType = "WADO" ) { return 491; } #kheopsDICOMwebProxy

      return 400 "requestType must be WADO";
    }

    location  /api/ohifservermetadata {
      return 491; #kheopsDICOMwebProxy
    }

    location @kheopsAuthorization {

      rewrite ^/api(.*)$ /authorization$1 break;

      # Fix the “It appears that your reverse proxy set up is broken" error.
      proxy_pass          ${kheopsAuthorization_url};

      proxy_redirect      ${kheopsAuthorization_url} ${root_url};
    }

    location @kheopsDICOMwebProxy {


      rewrite ^/api(.*)$ /capabilities/password/dicomweb$1 break;

      # Fix the “It appears that your reverse proxy set up is broken" error.
      proxy_pass          http://dicomweb_proxy;

      proxy_redirect      http://dicomweb_proxy ${root_url};
    }

    location @kheopsZipper {

      rewrite ^/api(.*)$ /zipper$1 break;

      # Fix the “It appears that your reverse proxy set up is broken" error.
      proxy_pass          ${kheopsZipper_url};

      proxy_redirect      ${kheopsZipper_url} ${root_url};
    }